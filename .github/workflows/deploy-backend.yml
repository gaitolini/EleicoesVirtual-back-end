name: CI/CD Deploy Backend

on:
  push:
    branches:
      - main

jobs:
  build-and-deploy:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout Code
        uses: actions/checkout@v2

      # Criar arquivo de credenciais a partir do Base64
      - name: Create Firebase Credentials File
        run: |
          echo "${{ secrets.FIREBASE_CREDENTIALS_BASE64 }}" | base64 --decode > firebaseConfig.json

      # Build the Docker image
      - name: Build Docker Image
        run: |
          docker build --no-cache -t eleicoes-backend .

      # Deploy via SCP
      - name: Copy Files via SCP
        uses: appleboy/scp-action@v0.1.3
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ec2-user
          key: ${{ secrets.AWS_SSH_KEY }}
          source: "./"
          target: "/home/ec2-user/EleicoesVirtual-back-end/"
          debug: true

      # Deploy via SSH (Montar as credenciais como volume)
      - name: Deploy via SSH
        uses: appleboy/ssh-action@v0.1.6
        with:
          host: ${{ secrets.AWS_HOST }}
          username: ec2-user
          key: ${{ secrets.AWS_SSH_KEY }}
          script: |
            cd ~/EleicoesVirtual-back-end/
            
            # Parar e remover o contêiner antigo, se ele existir
            if [ "$(docker ps -q -f name=eleicoes-backend)" ]; then
              echo "Parando e removendo contêiner antigo..."
              docker stop eleicoes-backend
              docker rm eleicoes-backend
            fi

            # Remover imagens antigas para liberar espaço (t2.micro tem recursos limitados)
            if [ "$(docker images -q eleicoes-backend)" ]; then
              echo "Removendo imagem antiga..."
              docker rmi eleicoes-backend
            fi
            
            # Build e rodar o novo contêiner
            echo "Construindo e rodando nova imagem..."
            docker build --no-cache -t eleicoes-backend .
            docker run -d -p 8081:8081 --name eleicoes-backend \
              -v $(pwd)/firebaseConfig.json:/app/credentials/firebaseConfig.json \
              -e GOOGLE_APPLICATION_CREDENTIALS=/app/credentials/firebaseConfig.json \
              eleicoes-backend
